name: Continuous Deployment of HUB Release to Target server

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Download Latest Release
        id: download-release
        uses: actions/download-artifact@v2
        with:
          path: /var/opt/
          ref: latest
      - name: Set Release Name Output
        id: set-release-name
        run: echo "::set-output name=release-name::$(basename ${GITHUB_REF})-$(date +'%Y%m%d%H%M%S')"
      - name: Copy Release to Target Server
        run: |
          sudo apt-get update
          sudo apt-get install -y sshpass
          sshpass -p eScobar@1993 scp -o StrictHostKeyChecking=no /var/opt/${{ steps.download-release.outputs.artifactName }} rsahoo@10.4.241.76:/tmp/${{ steps.set-release-name.outputs.release-name }}.tar.gz
      - name: Extract Release on Target Server
        run: |
          sudo apt-get update
          sudo apt-get install -y sshpass
          sshpass -p eScobar@1993 ssh -o StrictHostKeyChecking=no rsahoo@10.4.241.76 "gunzip /tmp/${{ steps.set-release-name.outputs.release-name }}.tar.gz -C /tmp/ && tar -xzf /tmp/${{ steps.set-release-name.outputs.release-name }}.tar -C /tmp/"
      - name: Deploy to Swarm
        run: |
          sudo apt-get update
          sudo apt-get install -y sshpass
          sshpass -p eScobar@1993 ssh -o StrictHostKeyChecking=no rsahoo@10.4.241.76 "docker stack deploy -c /tmp/${{ steps.set-release-name.outputs.release-name }}/docker-swarm/docker-compose.yml -c /tmp/${{ steps.set-release-name.outputs.release-name }}/docker-swarm/sizes-gen04/120sph.yaml hub"
